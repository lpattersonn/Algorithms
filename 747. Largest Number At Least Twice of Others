747. Largest Number At Least Twice of Others
Easy
1.1K
858
Companies
You are given an integer array nums where the largest integer is unique.

Determine whether the largest element in the array is at least twice as much as every other number in the array. If it is, return the index of the largest element, or return -1 otherwise.

 

Example 1:

Input: nums = [3,6,1,0]
Output: 1
Explanation: 6 is the largest integer.
For every other number in the array x, 6 is at least twice as big as x.
The index of value 6 is 1, so we return 1.
Example 2:

Input: nums = [1,2,3,4]
Output: -1
Explanation: 4 is less than twice the value of 3, so we return -1.
 

Constraints:

2 <= nums.length <= 50
0 <= nums[i] <= 100
The largest element in nums is unique.

# Answer

/**
 * @param {number[]} nums
 * @return {number}
 */
var dominantIndex = function(nums) {
//     // Sort array to find the largest number
//     let array = [...nums], sortedArry = array.sort(), largestNum = sortedArry[sortedArry.length - 1], result;

//     // Loop through sorted array
//     for (let i = 0; i <= sortedArry.length - 1; i++) {
//         // If the looped element in the sorted array ,multiplied by two, and is larger the the largest element set result to -1 and return reusult
//         if (i !== sortedArry.length - 1 && (sortedArry[i] * 2) > largestNum) {
//             result = -1;
//             console.log(sortedArry);
//                return result;
//         }
//     }
// // Return the index of the largest element if the largest number is at least twice as large as every element
//     if (result == undefined) {
//         console.log(sortedArry);
//         result = nums.indexOf(largestNum);
//         return result;
//     }
//     return result;

    let max = 0;

    for (let i = 0; i < nums.length; i++) {
        if (nums[i] > max) {
            max = nums[i];
        }
    }

    for (let i = 0; i < nums.length; i++) {
        if (nums[i] * 2 > max && nums[i] !== max) {
            return -1;
        }
    }

    return nums.indexOf(max);
};
