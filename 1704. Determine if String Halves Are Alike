1704. Determine if String Halves Are Alike
Easy
1.6K
79
Companies
You are given a string s of even length. Split this string into two halves of equal lengths, and let a be the first half and b be the second half.

Two strings are alike if they have the same number of vowels ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'). Notice that s contains uppercase and lowercase letters.

Return true if a and b are alike. Otherwise, return false.

 

Example 1:

Input: s = "book"
Output: true
Explanation: a = "bo" and b = "ok". a has 1 vowel and b has 1 vowel. Therefore, they are alike.
Example 2:

Input: s = "textbook"
Output: false
Explanation: a = "text" and b = "book". a has 1 vowel whereas b has 2. Therefore, they are not alike.
Notice that the vowel o is counted twice.
 

Constraints:

2 <= s.length <= 1000
s.length is even.
s consists of uppercase and lowercase letters.

#Answer
/**
 * @param {string} s
 * @return {boolean}
 */
var halvesAreAlike = function(s) {
    let arrayA = [];
    let arrayB = [];
    const vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U']
    let vowelsInA = 0;
    let vowelsInB = 0;
    let result = false;
    // Split tring in two
    let splitString = s.length/2; 
    for (let i = 0; i < s.length/2; i++) {
        arrayA.push(s[i]);
    }
    for (let j = s.length/2; j < s.length; j++) {
        arrayB.push(s[j]);
    }
    // count the number of vowels
    for (let element of arrayA) {
        if (vowels.includes(element)) {
            vowelsInA++;
        }
    }
    for (let element of arrayB) {
        if (vowels.includes(element)) {
            vowelsInB++;
        }
    }
    // Determin if the stringhave the same number of vowels
    if (vowelsInA === vowelsInB) {
        result = true;
    }
    return result;
};
