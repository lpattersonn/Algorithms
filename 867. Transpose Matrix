Given a 2D integer array matrix, return the transpose of matrix.

The transpose of a matrix is the matrix flipped over its main diagonal, switching the matrix's row and column indices.



 

Example 1:

Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [[1,4,7],[2,5,8],[3,6,9]]
Example 2:

Input: matrix = [[1,2,3],[4,5,6]]
Output: [[1,4],[2,5],[3,6]]
 

Constraints:

m == matrix.length
n == matrix[i].length
1 <= m, n <= 1000
1 <= m * n <= 105
-109 <= matrix[i][j] <= 109

#Answer

/**
 * @param {number[][]} matrix
 * @return {number[][]}
 */
var transpose = function(matrix) {
    let output = [], result = [];
    // Loop thorugh matrix
    for (let i = 0; i <= matrix.length; i++) {
        // Loop through matrix[i]
        if (matrix[i]) {
            for (let j = 0; j <= matrix[i].length; j++) {
                // If output[j] exists push matrix[i][j] to output[j] else create a new array within output
                if (output[j]) {
                    output[j].push(matrix[i][j]);
                } else {
                    output[j] = [matrix[i][j]];
                }
            }
        }
    } 
    // Remove array with undefined inside
    for (let element of output) {
        if (!element.includes(undefined)) {
            result.push(element);
        }
    }
    return result;
};
